name: Mobile CI

on:
  pull_request:
  push:
    branches:
      - main
      - mobile-ci # TEMP
    paths-ignore:
      - '**/.md'
  workflow_dispatch:

env:
  SPACEDRIVE_CUSTOM_APT_FLAGS: --no-install-recommends

jobs:
  # lint:
  #   name: Typecheck & Lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Install pnpm
  #       uses: pnpm/action-setup@v2.2.4
  #       with:
  #         version: 7.x.x

  #     - name: Install Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 17
  #         cache: 'pnpm'

  #     - name: Install workspace pnpm dependencies
  #       run: pnpm i --frozen-lockfile
      
  #     - name: Install mobile pnpm dependencies
  #       working-directory: ./apps/mobile
  #       run: pnpm i --frozen-lockfile

  #     - name: Perform typechecks
  #       working-directory: ./apps/mobile
  #       run: pnpm lint
  
  build:
    name: Build
    runs-on: ubuntu-latest
    # needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt, rust-src

      - name: Cache Rust dependencies
        uses: ./.github/actions/cache-rust-deps

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 7.x.x

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 17
          cache: 'pnpm'
      
      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v7
        with:
          expo-version: 6.x
          eas-version: latest
          packager: pnpm
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 18
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      
      # - name: Install pnpm dependencies
      #   run: pnpm i --frozen-lockfile

      - name: Run 'setup-system.sh' script
        # if: matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest'
        run: ./.github/scripts/setup-system.sh mobile # TODO: Mobile flag

      # - name: Run 'setup-system.ps1' script
      #   if: matrix.platform == 'windows-latest'
      #   run: ./.github/scripts/setup-system.ps1 -ci

      - name: Generate Prisma client
        uses: ./.github/actions/generate-prisma-client

      - name: Prepare NDK dir for caching ( workaround for https://github.com/actions/virtual-environments/issues/1337 )
        run: |
          sudo mkdir -p /usr/local/lib/android/sdk/ndk
          sudo chmod -R 777 /usr/local/lib/android/sdk/ndk
          sudo chown -R $USER:$USER /usr/local/lib/android/sdk/ndk
      
      # - name: NDK Cache
      #   id: ndk-cache
      #   uses: actions/cache@v3
      #   with:
      #     path: /usr/local/lib/android/sdk/ndk
      #     key: ndk-cache-21.4.7075529-v2
      
      - name: Install NDK
        if: steps.ndk-cache.outputs.cache-hit != 'true'
        run: echo "y" | sudo /usr/local/lib/android/sdk/tools/bin/sdkmanager --install "ndk;21.4.7075529"

      - name: Install workspace pnpm dependencies
        run: pnpm i --frozen-lockfile
      
      - name: Install mobile pnpm dependencies
        working-directory: ./apps/mobile
        run: pnpm i --frozen-lockfile
      
      # TODO: Debug
      - name: Why Prisma????
        run: ls ./core/src
      - name: Cargo fetch
        run: cargo fetch
      - name: Check core
        run: cargo check -p sd-core --release
      
      - name: Build Android
        working-directory: ./apps/mobile
        run: eas build --platform android --local --non-interactive
      
      # TODO: Build for IOS once Apple Developer account is setup
